[{"path":"https://nicoesve.github.io/latexSymb/articles/vignette1.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Use R to Write LaTeX Code in R Markdown Documents","text":"best explained example. Consider following equation, encountered Riemannian geometry: ddt⟨V,W⟩=⟨DVdt,W⟩+⟨V,DWdt⟩ \\frac{d}{dt} \\left \\langle V,W \\right \\rangle = \\left \\langle \\frac{DV}{dt}, W \\right \\rangle + \\left \\langle V, \\frac{DW}{dt} \\right \\rangle straightforward way code : use latexSymb, proceed follows instead. First create objects class latex_symb represent vector fields: write R functions represent mathematical concepts used: inner product, covariant derivative ordinary derivative: put everything equation environment: caveat order obtain right LaTeX code, must always use inline chunks like print objects class latexSymb .Rmd, even intend print LaTeX code inline, like align environment.","code":"\\frac{d}{dt} \\left \\langle V,W \\right \\rangle = \\left \\langle \\frac{DV}{dt}, W \\right \\rangle + \\left \\langle V, \\frac{DW}{dt} \\right \\rangle library(latexSymb) ## Loading required package: purrr ##  ## Attaching package: 'latexSymb' ## The following objects are masked from 'package:base': ##  ##     -, *, /, ^, + vf1 <- lsymb(\"V\") vf2 <- lsymb(\"W\") inner <- function(x,y) ang(lsymb(x, \",\", y)) cov.der <- function(x) lsymb(\"D\", x)/\"dt\" ddt <- function(x) lsymb(\"d\", x)/\"dt\" lenv(\"equation\",       lsymb(            ddt(inner(vf1, vf2)),             \"=\",             inner(cov.der(vf1), vf2) + inner(vf1, cov.der(vf2))      ) ) ## [1] \"\\\\begin{equation}\\\\frac{ d \\\\langle V , W \\\\rangle }{ dt } = \\\\langle \\\\frac{ D V }{ dt } , W \\\\rangle + \\\\langle V , \\\\frac{ D W }{ dt } \\\\rangle\\\\end{equation}\" `r vf1`"},{"path":"https://nicoesve.github.io/latexSymb/articles/vignette1.html","id":"unpacking","dir":"Articles","previous_headings":"Example","what":"Unpacking","title":"Use R to Write LaTeX Code in R Markdown Documents","text":"Let us unpack . Notice first definition cov.der important feature used. Namely, / function overwritten latexSymb either arguments objects class latex_symb, output another object class uses frac expect. also done +, -, * ^. Additionally, adds support use subscripts. Also, numerator cov.der, lsymb(\"D\", x) concatenates string \"D\" object x, wraps result new latex_symb object. , ’s use latexSymb function ang, provides dynamic enclosing inner product, thus avoiding need write left right. functions br, sqbr pths braces, square brackets parentheses respectively. Finally, function lenv spares user writing begin end. second argument list vector, whose components represent different lines. , instance, written also latex_symb also exposes il, surrounds expressions dollar signs, inline math environments.","code":"lenv(\"align*\",       c(        lsymb(ddt(inner(vf1, vf2)), \"&=\\\\\\\\\"),        lsymb(\"&=\", inner(cov.der(vf1), vf2) + inner(vf1, cov.der(vf2)))      ) ) ## [1] \"\\\\begin{align*}\\\\frac{ d \\\\langle V , W \\\\rangle }{ dt } &=\\\\\\\\&= \\\\langle \\\\frac{ D V }{ dt } , W \\\\rangle + \\\\langle V , \\\\frac{ D W }{ dt } \\\\rangle\\\\end{align*}\""},{"path":"https://nicoesve.github.io/latexSymb/articles/vignette1.html","id":"discussion","dir":"Articles","previous_headings":"","what":"Discussion","title":"Use R to Write LaTeX Code in R Markdown Documents","text":"whole, latexSymb may significantly reduce amount code users write compared raw LaTeX. think makes readable hence less prone errors. Users can mostly write mean, want see. Additionally, latexSymb limited RMarkdown. Actually, probably makes sense .Rtex documents. case, format knit can handle . Finally, complicated equations, R’s piping make things even readable.","code":""},{"path":"https://nicoesve.github.io/latexSymb/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas Escobar. Author, maintainer.","code":""},{"path":"https://nicoesve.github.io/latexSymb/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Escobar N (2024). latexSymb: Use 'R' Write 'LaTeX' Code. R package version 0.4.1, https://nicoesve.github.io/latexSymb/.","code":"@Manual{,   title = {latexSymb: Use 'R' to Write 'LaTeX' Code},   author = {Nicolas Escobar},   year = {2024},   note = {R package version 0.4.1},   url = {https://nicoesve.github.io/latexSymb/}, }"},{"path":"https://nicoesve.github.io/latexSymb/index.html","id":"latexsymb","dir":"","previous_headings":"","what":"Use R to Write LaTeX Code","title":"Use R to Write LaTeX Code","text":"Simplify task writing LaTeX code using R. Instead using LaTeX utilities like newcommand, write R functions flexibility readability. Also, additional support grouping makes easier write complicated expressions.","code":""},{"path":"https://nicoesve.github.io/latexSymb/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Use R to Write LaTeX Code","text":"Released version CRAN: Development version GitHub:","code":"install.packages(\"latexSymb\") if (!require(\"devtools\")) {   install.packages(\"devtools\") } devtools::install_github(\"nicoesve/latexSymb\")"},{"path":"https://nicoesve.github.io/latexSymb/reference/enclosing.html","id":null,"dir":"Reference","previous_headings":"","what":"LaTeX Enclosings — pths","title":"LaTeX Enclosings — pths","text":"cumbersome write left right every time grouping used LaTeX. functions take care .","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/enclosing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaTeX Enclosings — pths","text":"","code":"pths(x) br(x) sqbr(x) ang(x)"},{"path":"https://nicoesve.github.io/latexSymb/reference/enclosing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaTeX Enclosings — pths","text":"x object can passed .character.","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/enclosing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LaTeX Enclosings — pths","text":"object class latex_symb whose repr x's repr enclosed corresponding symbols.","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/enclosing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LaTeX Enclosings — pths","text":"","code":"al <- lsymb(\"\\\\alpha\") pths(al) #> [1] \"\\\\left( \\\\alpha \\\\right)\" br(al) #> [1] \"\\\\lbrace \\\\alpha \\\\rbrace\" sqbr(al) #> [1] \"\\\\left[ \\\\alpha \\\\right]\" ang(al) #> [1] \"\\\\langle \\\\alpha \\\\rangle\""},{"path":"https://nicoesve.github.io/latexSymb/reference/environments.html","id":null,"dir":"Reference","previous_headings":"","what":"LaTeX Environments — il","title":"LaTeX Environments — il","text":"Equations symbols LaTeX can either inline . il wraps expressions former, lenv latter.","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/environments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaTeX Environments — il","text":"","code":"il(x) lenv(name, rows)"},{"path":"https://nicoesve.github.io/latexSymb/reference/environments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaTeX Environments — il","text":"x object class latex_symb name name LaTeX environment. instance, align gather . rows list objects can passed .character.","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/environments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LaTeX Environments — il","text":"il, x's repr surrounded dollar signs. lenv, multiline string whose lines : 1. \\begin statement name; 2. character representation row; 3. \\end statement name","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/environments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LaTeX Environments — il","text":"","code":"al <- lsymb(\"\\\\alpha\") be <- lsymb(\"\\\\beta\") il(al) #> [1] \"$\\\\alpha$\" lenv(\"align\",      c(       lsymb(al^2 - be^2, \"&=\", 0, \"\\\\\\\\\"),       lsymb(pths(al - be)*pths(al + be), \"&=\", 0)      ) )  #> [1] \"\\\\begin{align}\\\\alpha ^{ 2 } - \\\\beta ^{ 2 } &= 0 \\\\\\\\\\\\left( \\\\alpha - \\\\beta \\\\right) \\\\left( \\\\alpha + \\\\beta \\\\right) &= 0\\\\end{align}\""},{"path":"https://nicoesve.github.io/latexSymb/reference/main.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, print and turn to string objects of class latex_symb — lsymb","title":"Create, print and turn to string objects of class latex_symb — lsymb","text":"class latex_symb simply wrapper string LaTeX code. lsymb creates wrapper, .character print extract string.","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, print and turn to string objects of class latex_symb — lsymb","text":"","code":"lsymb(...) # S3 method for class 'latex_symb' print(x, ...) # S3 method for class 'latex_symb' as.character(x, ...)"},{"path":"https://nicoesve.github.io/latexSymb/reference/main.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, print and turn to string objects of class latex_symb — lsymb","text":"... Objects can passed .character. x object class latex_symb","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/main.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, print and turn to string objects of class latex_symb — lsymb","text":"lsymb returns object class latex_symb. S3 class, whose objects lists single component called repr. repr LaTeX code object, obtained pasting character representations arguments. print.lsymb passes repr first argument, plus additional arguments, print. returned value whatever print returns. .character.lsymb passes repr first argument, plus additional arguments, .character. returned value whatever .character returns.","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/main.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, print and turn to string objects of class latex_symb — lsymb","text":"","code":"al <- lsymb(\"\\\\alpha\") print(al) #> [1] \"\\\\alpha\" as.character(al) #> [1] \"\\\\alpha\""},{"path":"https://nicoesve.github.io/latexSymb/reference/operators.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic — +","title":"Arithmetic — +","text":"natural interpretations arithmetic operations objects class latexSymb. Namely, output another object class, constructed using repr arguments corresponding symbol operation. functions implement elementary ones.","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/operators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic — +","text":"","code":"a + b a - b a/b a * b a^b under(a,b)"},{"path":"https://nicoesve.github.io/latexSymb/reference/operators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic — +","text":"object can passed .character b object can passed .character","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/operators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arithmetic — +","text":"object class latex_symb whose repr : + -, concatenation 's repr, corresponding arithmetic symbol, b's repr. *, concatenation repr, space . /, b's repr inside \\frac{}{}. ^, 's repr, caret b's repr braces. , 's repr, underscore b's repr braces","code":""},{"path":"https://nicoesve.github.io/latexSymb/reference/operators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arithmetic — +","text":"","code":"a <- lsymb(\"\\\\alpha\") b <- lsymb(\"\\\\beta\") a+b #> [1] \"\\\\alpha + \\\\beta\" a-b #> [1] \"\\\\alpha - \\\\beta\" a*b #> [1] \"\\\\alpha \\\\beta\" a/b #> [1] \"\\\\frac{ \\\\alpha }{ \\\\beta }\" a^b #> [1] \"\\\\alpha ^{ \\\\beta }\" under(a,b) #> [1] \"\\\\alpha _{ \\\\beta }\""}]
